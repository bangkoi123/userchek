# Simple Load Balancer untuk Multi-Account Telegram
upstream telegram_accounts {
    # Round-robin distribution
    server telegram-1:8080 max_fails=3 fail_timeout=30s;
    server telegram-2:8080 max_fails=3 fail_timeout=30s;  
    server telegram-3:8080 max_fails=3 fail_timeout=30s;
}

server {
    listen 80;
    
    # Health check endpoint
    location /health {
        proxy_pass http://telegram_accounts;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_connect_timeout 5s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
    }
    
    # Validation endpoint
    location /validate {
        proxy_pass http://telegram_accounts;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Add headers untuk tracking
        add_header X-Served-By $upstream_addr always;
    }
    
    # Status endpoint
    location /status {
        proxy_pass http://telegram_accounts;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
    
    # Default response
    location / {
        return 200 '{"service":"telegram_multi_validator","accounts":3,"status":"running"}';
        add_header Content-Type application/json;
    }
}